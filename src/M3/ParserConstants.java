/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
package M3;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int ID = 98;
  /** RegularExpression Id. */
  int LETTER = 99;
  /** RegularExpression Id. */
  int DIGIT = 100;
  /** RegularExpression Id. */
  int NUMBER = 101;
  /** RegularExpression Id. */
  int HEX = 102;
  /** RegularExpression Id. */
  int CHAR = 103;
  /** RegularExpression Id. */
  int TEXT = 104;
  /** RegularExpression Id. */
  int PRINTING = 105;
  /** RegularExpression Id. */
  int OTHER = 106;
  /** RegularExpression Id. */
  int ESCAPE = 107;
  /** RegularExpression Id. */
  int IGNORED = 115;
  /** RegularExpression Id. */
  int END_PRAGMA = 116;
  /** RegularExpression Id. */
  int INLINE = 119;
  /** RegularExpression Id. */
  int EXTERNAL = 120;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int COMMENT = 1;
  /** Lexical state. */
  int PRAGMA = 2;
  /** Lexical state. */
  int PRAGMA_INLINE = 3;
  /** Lexical state. */
  int PRAGMA_EXTERNAL = 4;
  /** Lexical state. */
  int PRAGMA_IGNORED = 5;
  /** Lexical state. */
  int PRAGMA_NESTED = 6;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\u000b\"",
    "\"\\f\"",
    "\"AND\"",
    "\"DO\"",
    "\"FROM\"",
    "\"NOT\"",
    "\"REPEAT\"",
    "\"UNTIL\"",
    "\"ANY\"",
    "\"ELSE\"",
    "\"GENERIC\"",
    "\"OBJECT\"",
    "\"RETURN\"",
    "\"UNTRACED\"",
    "\"ARRAY\"",
    "\"ELSIF\"",
    "\"IF\"",
    "\"OF\"",
    "\"REVEAL\"",
    "\"VALUE\"",
    "\"AS\"",
    "\"END\"",
    "\"IMPORT\"",
    "\"OR\"",
    "\"ROOT\"",
    "\"VAR\"",
    "\"BEGIN\"",
    "\"EVAL\"",
    "\"IN\"",
    "\"OVERRIDES\"",
    "\"SET\"",
    "\"WHILE\"",
    "\"BITS\"",
    "\"EXCEPT\"",
    "\"INTERFACE\"",
    "\"PROCEDURE\"",
    "\"THEN\"",
    "\"WITH\"",
    "\"BRANDED\"",
    "\"EXCEPTION\"",
    "\"LOCK\"",
    "\"RAISE\"",
    "\"TO\"",
    "\"BY\"",
    "\"EXIT\"",
    "\"LOOP\"",
    "\"RAISES\"",
    "\"TRY\"",
    "\"CASE\"",
    "\"EXPORTS\"",
    "\"METHODS\"",
    "\"READONLY\"",
    "\"TYPE\"",
    "\"CONST\"",
    "\"FINALLY\"",
    "\"MOD\"",
    "\"RECORD\"",
    "\"TYPECASE\"",
    "\"DIV\"",
    "\"FOR\"",
    "\"MODULE\"",
    "\"REF\"",
    "\"UNSAFE\"",
    "\"+\"",
    "\"<\"",
    "\"#\"",
    "\"=\"",
    "\";\"",
    "\"..\"",
    "\":\"",
    "\"-\"",
    "\">\"",
    "\"{\"",
    "\"}\"",
    "\"|\"",
    "\":=\"",
    "\"<:\"",
    "\"*\"",
    "\"<=\"",
    "\"(\"",
    "\")\"",
    "\"^\"",
    "\",\"",
    "\"=>\"",
    "\"/\"",
    "\">=\"",
    "\"[\"",
    "\"]\"",
    "\".\"",
    "\"&\"",
    "\"(*\"",
    "\"*)\"",
    "<token of kind 97>",
    "<ID>",
    "<LETTER>",
    "<DIGIT>",
    "<NUMBER>",
    "<HEX>",
    "<CHAR>",
    "<TEXT>",
    "<PRINTING>",
    "<OTHER>",
    "<ESCAPE>",
    "\"<*\"",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\u000b\"",
    "\"\\f\"",
    "<IGNORED>",
    "\"*>\"",
    "\"INLINE\"",
    "\"EXTERNAL\"",
    "<INLINE>",
    "<EXTERNAL>",
    "\"<*\"",
    "<token of kind 122>",
    "\"<*\"",
    "\"*>\"",
    "<token of kind 125>",
  };

}
